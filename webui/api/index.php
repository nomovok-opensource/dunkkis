<?php

/** Dunkkis Server
  * ==============
  * 
  * Copyright (c) 2009-2010 Nomovok Ltd
  * This software is licensed under The MIT License. See LICENSE for details.
  *
  * @author Nguyen Thanh Trung - nguyenthanh.trung@nomovok.com
  * @author Rami Erlin - rami.erlin@nomovok.com
  */

error_reporting(E_ALL);

include_once '../includes/config.inc.php';
include_once '../includes/ds-constants.inc.php';
include_once '../includes/lib.inc.php';
include_once '../ds-db.php';

include_once 'ds-sensor-data-methods.php';
include_once 'ds-devices-management-methods.php';
include_once 'ds-profile-methods.php';
include_once 'ds-session.php';
include_once 'ds-alarms.php';
include_once 'ds-camera-methods.php';

/**
 * types_autoload
 * Loads an include file for a type.
 * @param class: string Class name for the type.
 */
function types_autoload( $class ) {
    $file = "types/" . $class . ".php";
    if( file_exists( $file ) && is_readable( $file ) ) {
        include_once( $file );
    }
}

spl_autoload_register( 'types_autoload' );

// may need to be bigger, in case of more data is sent to the client
ini_set("memory_limit", "32M");
// enable this when in production and add ttl?
ini_set("soap.wsdl_cache_enabled", "0");
// when in production, we don't want outsiders to see the errors generated by our code, right? uncomment the next line then
//use_soap_error_handler(false);

//db_init();


$soapServer = new SoapServer($config['ds_wsdl_file']);

try {
    $db = new PDO( $config['db_connstring'], $config['db_user'], $config['db_passwd'] );
    //$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
}
catch( PDOException $e ) {
   // throw SoapFault..
   die();
}

// Session handling functions
$soapServer->addFunction("initProfileSession");
$soapServer->addFunction("closeProfileSession");

 // Devices management functions
$soapServer->addFunction("getDevicesByProfile");
$soapServer->addFunction("getSensorsByDevice");

$soapServer->addFunction("getLoggedDataBySensor");
$soapServer->addFunction("getLoggedDataByDevice");

$soapServer->addFunction("getProfiles");

// alarm functions
$soapServer->addFunction("getAlarms");
$soapServer->addFunction("getAlarmHistory");
$soapServer->addFunction("getAlarmDetails");
$soapServer->addFunction("getAlarmSensors");
/*$soapServer->addFunction("getAlarmTriggers");
$soapServer->addFunction("addAlarmTrigger");
$soapServer->addFunction("removeAlarmTrigger");
$soapServer->addFunction("modifyAlarmTrigger");
$soapServer->addFunction("getAlarmActions");
$soapServer->addFunction("addAlarmAction");
$soapServer->addFunction("removeAlarmAction");
$soapServer->addFunction("modifyAlarmAction");
$soapServer->addFunction("getAlarmContacts");
$soapServer->addFunction("addAlarmContact");
$soapServer->addFunction("removeAlarmContact");
$soapServer->addFunction("modifyAlarmContact");*/

$soapServer->addFunction("getThumbnailsBySensor");
$soapServer->addFunction("getPictureByTimestamp");
 
$soapServer->addFunction("getCameras");
$soapServer->addFunction("setCamera");
 
$soapServer->addFunction("setPicture");

//var_dump($soapServer);
$soapServer->handle();
?>
